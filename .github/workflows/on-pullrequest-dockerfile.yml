name: On Pull Request - Dockerfile

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "**/Dockerfile"
      - ".github/workflows/on-pullrequest-dockerfile.yml"
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

permissions: read-all

jobs:
  docker-analysis:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        dockerfile:
          [
            { name: "dms_database", path: "src/backend/Dockerfile", type: "local" },
            { name: "dms", path: "src/Dockerfile", type: "local" }
          ]
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
        name: Run Linter on ${{ matrix.dockerfile.name }} Dockerfile
        with:
          dockerfile: ${{ matrix.dockerfile.path }}
          failure-threshold: error

      - name: Log in to Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Build
        run: |
          path=${{matrix.dockerfile.path}}
          folder=${path%/*}
          cd $folder
          dockerfile=$(echo ${{matrix.dockerfile.path}} | awk -F"/" '{print $NF}')

          docker build -f $dockerfile -t ${{ matrix.dockerfile.name }} .

      - name: Analyze
        uses: docker/scout-action@7c61653c2736d21969dd4593fde76c670d4a86cb # v1.2.0
        with:
          command: cves
          image: local://${{ matrix.dockerfile.name }}
          sarif-file: sarif-${{ matrix.dockerfile.name }}.output.json
          only-severities: critical,high,medium,low
          summary: true

      - name: Results
        run: |
          results=$(cat sarif-${{ matrix.dockerfile.name }}.output.json)
          errors=$(echo $results | jq '[.runs[].results[] | select(.level == "error")] | length')
          warnings=$(echo $results | jq '[.runs[].results[] | select(.level == "warning")] | length')
          notes=$(echo $results | jq '[.runs[].results[] | select(.level == "note")] | length')

          if [[ $errors -gt 0 ]]
          then
            echo "::error::There are $errors errors"
            exit 1
          fi

      - name: Upload SARIF result
        id: upload-sarif
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: github/codeql-action/upload-sarif@cf7e9f23492505046de9a37830c3711dd0f25bb3 #codeql-bundle-v2.16.2
        with:
          sarif_file: sarif-${{ matrix.dockerfile.name }}.output.json
